import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score
df = pd.read_csv('diabetes.csv')
X = df.drop(columns = 'Outcome', axis = 1)
Y = df['Outcome']
scaler = StandardScaler()
scaler.fit(X)
standardized_data = scaler.transform(X)
X = standardized_data
Y = df['Outcome']
X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size = 0.2,stratify=Y,random_state = 2)
classifier = svm.SVC(kernel='linear')
classifier.fit(X_train,Y_train)
from tkinter import *
root = Tk()
root.geometry("676x380")
root.resizable(0,0)
title = root.title('DIABETES PREDICTOR')
img = PhotoImage(file="iconn.png")
root.iconphoto(False,img)
bg = PhotoImage(file = "D6.png")
my_label = Label(root,image=bg)
my_label.place(x=0,y=0)
def submit_command():
    a = int(field1.get())
    b = int(field2.get())
    c = int(field3.get())
    d = int(field4.get())
    e = int(field5.get())
    f = float(field6.get())
    g = float(field7.get())
    h = int(field8.get())
    input_data = (a,b,c,d,e,f,g,h)
    input_data_as_numpy_array = np.asarray(input_data)
    input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)
    std_data = scaler.transform(input_data_reshaped)
    prediction = classifier.predict(std_data)
    if(prediction[0] == 0):
        predict_label.config(text="YOU ARE NOT DIABETIC",fg='green')
    else:
        predict_label.config(text="YOU ARE DIABETIC",fg='red')

def clear_command():
    field1.delete(0, END)
    field2.delete(0, END)
    field3.delete(0, END)
    field4.delete(0, END)
    field5.delete(0, END)
    field6.delete(0, END)
    field7.delete(0, END)
    field8.delete(0, END)
    predict_label.config(text="ENTER THE ABOVE DETAILS",fg='gray')
    field1.focus_set()

label1 = Label(root, text = "PREGNENCIES",fg = 'grey', bg = 'black',font=('helvetica',8))
label1.place(x=35,y=20)
field1 = Entry(root)
field1.place(x=200,y=20)
label2 = Label(root, text = "GLUCOSE",fg = 'grey', bg = 'black',font=('helvetica',8))
label2.place(x=35,y=45)
field2 = Entry(root)
field2.place(x=200,y=45)
label3 = Label(root, text = "BLOOD PRESSURE",fg = 'grey', bg = 'black',font=('helvetica',8))
label3.place(x=35,y=70)
field3 = Entry(root)
field3.place(x=200,y=70)
label4 = Label(root, text = "SKIN THICKNESS",fg = 'grey', bg = 'black',font=('helvetica',8))
label4.place(x=35,y=95)
field4 = Entry(root)
field4.place(x=200,y=95)
label5 = Label(root, text = "INSULIN",fg = 'grey', bg = 'black',font=('helvetica',8))
label5.place(x=35,y=120)
field5 = Entry(root)
field5.place(x=200,y=120)
label6 = Label(root, text = "BMI",fg = 'grey', bg = 'black',font=('helvetica',8))
label6.place(x=35,y=145)
field6 = Entry(root)
field6.place(x=200,y=145)
label7 = Label(root, text = "DIABETES PEDIGREE FUNCTION",fg = 'grey', bg = 'black',font=('helvetica',8))
label7.place(x=35,y=170)
field7 = Entry(root)
field7.place(x=200,y=170)
label8 = Label(root, text = "AGE",fg = 'grey', bg = 'black',font=('helvetica',8))
label8.place(x=35,y=195)
field8 = Entry(root)
field8.place(x=200,y=195)
button1 = Button(root, text = "PREDICT", bg = "gray25",fg = "white",font=('helvetica',8),borderwidth=0, command = submit_command)
button1.place(x=35,y=225)
button2 = Button(root, text = "CLEAR", bg = "gray25",fg = "white",font=('helvetica',8),borderwidth=0, command = clear_command)
button2.place(x=90,y=225)

predict_label = Label(root, text="ENTER THE ABOVE DETAILS",fg = 'gray', bg = 'black',font='helvetica 10 bold')
predict_label.place(x=148,y=315)
root.mainloop()
